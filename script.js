const projectsData = {
            weather: {
                title: "üå¶Ô∏è WeatherCloud",
                description: "Une application m√©t√©o r√©volutionnaire qui transforme les donn√©es climatiques en exp√©rience visuelle immersive.",
                fullDescription: "WeatherCloud repense compl√®tement l'exp√©rience de consultation m√©t√©o en proposant une interface 3D interactive. L'application utilise des API m√©t√©o en temps r√©el pour afficher des visualisations dynamiques des conditions climatiques, avec des effets de particules pour la pluie, la neige, et des animations fluides pour les changements de temps.",
                technologies: ["Three.js", "React", "Node.js", "OpenWeather API", "WebGL", "CSS3"],
                features: [
                    "Visualisation 3D en temps r√©el des conditions m√©t√©o",
                    "Effets de particules pour pluie, neige et brouillard",
                    "Pr√©visions sur 7 jours avec animations",
                    "G√©olocalisation automatique",
                    "Interface responsive et intuitive",
                    "Mode sombre/clair adaptatif"
                ],
                challenges: "Le principal d√©fi √©tait d'optimiser les performances des animations 3D tout en maintenant une interface fluide sur tous les appareils.",
                results: "L'application a re√ßu plus de 10,000 utilisateurs actifs en 3 mois et un taux de satisfaction de 94%."
            },
            gamehub: {
                title: "üéÆ GameHub",
                description: "Une plateforme de jeux multijoueur compl√®te avec syst√®me de chat et matchmaking intelligent.",
                fullDescription: "GameHub est une plateforme sociale de gaming qui permet aux joueurs de se connecter, de jouer ensemble et de communiquer en temps r√©el. Le projet inclut plusieurs mini-jeux, un syst√®me de ranking, et une architecture scalable pour supporter des milliers d'utilisateurs simultan√©s.",
                technologies: ["React", "Node.js", "Socket.io", "MongoDB", "Redis", "JWT", "Docker"],
                features: [
                    "Syst√®me de matchmaking intelligent",
                    "Chat en temps r√©el avec emojis personnalis√©s",
                    "Plusieurs jeux int√©gr√©s (Puissance 4, Morpion, Quiz)",
                    "Syst√®me de ranking et achievements",
                    "Profils utilisateurs personnalisables",
                    "Notifications push en temps r√©el"
                ],
                challenges: "G√©rer la synchronisation en temps r√©el entre les joueurs et optimiser les performances pour les sessions multijoueur.",
                results: "La plateforme compte maintenant 5,000+ utilisateurs enregistr√©s avec une moyenne de 200 joueurs simultan√©s."
            },
            chatbot: {
                title: "ü§ñ ChatBot IA",
                description: "Un assistant virtuel intelligent capable de comprendre et r√©pondre naturellement aux questions.",
                fullDescription: "Ce chatbot utilise des techniques avanc√©es de traitement du langage naturel pour offrir une exp√©rience conversationnelle fluide. Il peut g√©rer des requ√™tes complexes, apprendre des interactions pass√©es, et s'adapter au style de communication de chaque utilisateur.",
                technologies: ["Python", "TensorFlow", "NLTK", "FastAPI", "React", "WebSocket", "PostgreSQL"],
                features: [
                    "Compr√©hension du langage naturel avanc√©e",
                    "Apprentissage adaptatif des pr√©f√©rences utilisateur",
                    "Int√©gration avec multiple APIs (m√©t√©o, news, traduction)",
                    "Interface conversationnelle intuitive",
                    "Historique des conversations persistant",
                    "Support multilingue (FR, EN, ES)"
                ],
                challenges: "Entra√Æner le mod√®le pour comprendre le contexte et maintenir une coh√©rence dans les conversations longues.",
                results: "Le chatbot atteint un taux de satisfaction de 89% et traite plus de 1,000 conversations par jour."
            },
            taskflow: {
                title: "üì± TaskFlow",
                description: "Application mobile de productivit√© avec synchronisation cloud et IA pour optimiser l'organisation.",
                fullDescription: "TaskFlow r√©volutionne la gestion de t√¢ches en int√©grant l'intelligence artificielle pour sugg√©rer des priorit√©s, optimiser les plannings et envoyer des rappels intelligents. L'application se synchronise parfaitement entre tous les appareils.",
                technologies: ["React Native", "Node.js", "MongoDB", "AWS", "TensorFlow.js", "Push Notifications"],
                features: [
                    "IA pour suggestions de priorit√©s automatiques",
                    "Synchronisation temps r√©el multi-appareils",
                    "Calendrier intelligent avec d√©tection de conflits",
                    "Rappels adaptatifs bas√©s sur les habitudes",
                    "Collaboration en √©quipe avec partage de projets",
                    "Analytics de productivit√© personnalis√©s"
                ],
                challenges: "D√©velopper des algorithmes d'IA l√©gers pour mobile et assurer une synchronisation parfaite offline/online.",
                results: "L'app a √©t√© t√©l√©charg√©e 15,000+ fois avec une note moyenne de 4.7/5 sur les stores."
            }
        };

        function openProject(projectId) {
            const project = projectsData[projectId];
            const modal = document.getElementById('projectModal');
            const modalContent = document.getElementById('modalContent');
            const navbar = document.querySelector('.navbar');
            
            modalContent.innerHTML = `
                <h2>${project.title}</h2>
                <p style="font-size: 1.2rem; opacity: 0.9; text-align: center; margin-bottom: 2rem;">${project.description}</p>
                
                <h3>üìù Description d√©taill√©e</h3>
                <p>${project.fullDescription}</p>
                
                <h3>üõ†Ô∏è Technologies utilis√©es</h3>
                <div class="tech-stack">
                    ${project.technologies.map(tech => `<span class="tech-tag">${tech}</span>`).join('')}
                </div>
                
                <h3>‚ú® Fonctionnalit√©s principales</h3>
                <ul class="features-list">
                    ${project.features.map(feature => `<li>${feature}</li>`).join('')}
                </ul>
                
                <h3>üöß D√©fis techniques</h3>
                <p>${project.challenges}</p>
                
                <h3>üìä R√©sultats</h3>
                <p>${project.results}</p>
                
                <div style="text-align: center; margin-top: 2rem;">
                    <button class="btn" onclick="alert('Lien vers le projet GitHub ou demo')">Voir le code</button>
                    <button class="btn" onclick="alert('Lien vers la d√©mo live')" style="margin-left: 1rem;">D√©mo live</button>
                </div>
            `;
            
            modal.classList.add('active');
            navbar.classList.add('hidden'); 
            document.body.style.overflow = 'hidden';
        }

        function closeModal() {
            const modal = document.getElementById('projectModal');
            const navbar = document.querySelector('.navbar');

            modal.classList.remove('active');
            navbar.classList.remove('hidden');
            document.body.style.overflow = 'auto';
        }

        // Fermer le modal en cliquant √† l'ext√©rieur
        document.getElementById('projectModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });

        // Fermer le modal avec la touche Escape
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeModal();
            }
        });

        // Animation des nuages continue
        function resetCloudAnimation() {
            const clouds = document.querySelectorAll('.cloud');
            clouds.forEach(cloud => {
                cloud.style.animationPlayState = 'running';
            });
        }

        // Initialisation
        document.addEventListener('DOMContentLoaded', function() {
            resetCloudAnimation();
        });
